apiVersion: apps/v1
kind: Deployment
metadata:
  name: lanchonete-api
  labels:
    app: lanchonete-api
spec:
  template:
    metadata:
      name: lanchonete-api
      labels:
        app: lanchonete-api
    spec:
      initContainers:
        - name: wait-for-database
          image: alpine
          env:
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_HOST

            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_PORT
          command:
            [
              "sh",
              "-c",
              'until nc -z $POSTGRES_HOST $POSTGRES_PORT; do echo "waiting for database"; sleep 5; done; echo "Database is up!"',
            ]

      containers:
        - name: lanchonete-api-container
          image: 214755515331.dkr.ecr.us-east-1.amazonaws.com/tech-challenge-lanchonete/lanchonete-api:latest
          imagePullPolicy: Always
          env:
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_HOST

            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_PORT

            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: lanchonete-db-config
                  key: POSTGRES_DB

            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_USER

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_PASSWORD

            - name: API_PORT
              valueFrom:
                configMapKeyRef:
                  name: lanchonete-api-config
                  key: API_PORT
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
            periodSeconds: 10
            failureThreshold: 3
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
            periodSeconds: 10
            failureThreshold: 5
            initialDelaySeconds: 3
          resources:
            requests:
              memory: "100M"
              cpu: "250m"
            limits:
              memory: "200M"
              cpu: "5000m"
  replicas: 3
  selector:
    matchLabels:
      app: lanchonete-api
